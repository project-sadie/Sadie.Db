// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sadie.Db;

#nullable disable

namespace Sadie.Db.Migrations
{
    [DbContext(typeof(SadieMigrationsDbContext))]
    [Migration("20250726192102_OauthClients")]
    partial class OauthClients
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CatalogItemFurnitureItem", b =>
                {
                    b.Property<int>("CatalogItemsId")
                        .HasColumnType("int")
                        .HasColumnName("catalog_items_id");

                    b.Property<int>("FurnitureItemsId")
                        .HasColumnType("int")
                        .HasColumnName("furniture_items_id");

                    b.HasKey("CatalogItemsId", "FurnitureItemsId")
                        .HasName("pk_catalog_item_furniture_item");

                    b.HasIndex("FurnitureItemsId")
                        .HasDatabaseName("ix_catalog_item_furniture_item_furniture_items_id");

                    b.ToTable("catalog_item_furniture_item", (string)null);
                });

            modelBuilder.Entity("FurnitureItemHandItem", b =>
                {
                    b.Property<int>("FurnitureItemsId")
                        .HasColumnType("int")
                        .HasColumnName("furniture_items_id");

                    b.Property<int>("HandItemsId")
                        .HasColumnType("int")
                        .HasColumnName("hand_items_id");

                    b.HasKey("FurnitureItemsId", "HandItemsId")
                        .HasName("pk_furniture_item_hand_item");

                    b.HasIndex("HandItemsId")
                        .HasDatabaseName("ix_furniture_item_hand_item_hand_items_id");

                    b.ToTable("furniture_item_hand_item", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Badge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("longtext")
                        .HasColumnName("code");

                    b.HasKey("Id")
                        .HasName("pk_badges");

                    b.ToTable("badges", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.BannedIpAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expires_at");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("ip_address");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("reason");

                    b.HasKey("Id")
                        .HasName("pk_banned_ip_addresses");

                    b.HasIndex("CreatorId")
                        .HasDatabaseName("ix_banned_ip_addresses_creator_id");

                    b.ToTable("banned_ip_addresses", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Catalog.CatalogClubOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CostCredits")
                        .HasColumnType("int")
                        .HasColumnName("cost_credits");

                    b.Property<int>("CostPoints")
                        .HasColumnType("int")
                        .HasColumnName("cost_points");

                    b.Property<int>("CostPointsType")
                        .HasColumnType("int")
                        .HasColumnName("cost_points_type");

                    b.Property<int>("DurationDays")
                        .HasColumnType("int")
                        .HasColumnName("duration_days");

                    b.Property<bool>("IsVip")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_vip");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_catalog_club_offers");

                    b.ToTable("catalog_club_offers", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Catalog.FrontPage.CatalogFrontPageItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CatalogPageId")
                        .HasColumnType("int")
                        .HasColumnName("catalog_page_id");

                    b.Property<string>("Image")
                        .HasColumnType("longtext")
                        .HasColumnName("image");

                    b.Property<string>("ProductName")
                        .HasColumnType("longtext")
                        .HasColumnName("product_name");

                    b.Property<string>("Title")
                        .HasColumnType("longtext")
                        .HasColumnName("title");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("type_id");

                    b.HasKey("Id")
                        .HasName("pk_catalog_front_page_items");

                    b.HasIndex("CatalogPageId")
                        .HasDatabaseName("ix_catalog_front_page_items_catalog_page_id");

                    b.ToTable("catalog_front_page_items", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Catalog.Items.CatalogItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int?>("CatalogPageId")
                        .HasColumnType("int")
                        .HasColumnName("catalog_page_id");

                    b.Property<int>("CostCredits")
                        .HasColumnType("int")
                        .HasColumnName("cost_credits");

                    b.Property<int>("CostPoints")
                        .HasColumnType("int")
                        .HasColumnName("cost_points");

                    b.Property<int>("CostPointsType")
                        .HasColumnType("int")
                        .HasColumnName("cost_points_type");

                    b.Property<string>("MetaData")
                        .HasColumnType("longtext")
                        .HasColumnName("meta_data");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<bool>("RequiresClubMembership")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("requires_club_membership");

                    b.Property<int>("SellLimit")
                        .HasColumnType("int")
                        .HasColumnName("sell_limit");

                    b.Property<int>("StackLimit")
                        .HasColumnType("int")
                        .HasColumnName("stack_limit");

                    b.HasKey("Id")
                        .HasName("pk_catalog_items");

                    b.HasIndex("CatalogPageId")
                        .HasDatabaseName("ix_catalog_items_catalog_page_id");

                    b.ToTable("catalog_items", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Catalog.Pages.CatalogPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caption")
                        .HasColumnType("longtext")
                        .HasColumnName("caption");

                    b.Property<int?>("CatalogPageId")
                        .HasColumnType("int")
                        .HasColumnName("catalog_page_id");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("enabled");

                    b.Property<int>("IconId")
                        .HasColumnType("int")
                        .HasColumnName("icon_id");

                    b.PrimitiveCollection<string>("ImagesJson")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("images_json");

                    b.Property<string>("Layout")
                        .HasColumnType("longtext")
                        .HasColumnName("layout");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.PrimitiveCollection<string>("TextsJson")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("texts_json");

                    b.Property<bool>("Visible")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("visible");

                    b.HasKey("Id")
                        .HasName("pk_catalog_pages");

                    b.HasIndex("CatalogPageId")
                        .HasDatabaseName("ix_catalog_pages_catalog_page_id");

                    b.ToTable("catalog_pages", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Constants.ServerPlayerConstants", b =>
                {
                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("MaxFriendships")
                        .HasColumnType("int")
                        .HasColumnName("max_friendships");

                    b.Property<int>("MaxMottoLength")
                        .HasColumnType("int")
                        .HasColumnName("max_motto_length");

                    b.Property<int>("MinSsoLength")
                        .HasColumnType("int")
                        .HasColumnName("min_sso_length");

                    b.ToTable("server_player_constants", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Constants.ServerRoomConstants", b =>
                {
                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("MaxChatMessageLength")
                        .HasColumnType("int")
                        .HasColumnName("max_chat_message_length");

                    b.Property<int>("MaxDescriptionLength")
                        .HasColumnType("int")
                        .HasColumnName("max_description_length");

                    b.Property<int>("MaxNameLength")
                        .HasColumnType("int")
                        .HasColumnName("max_name_length");

                    b.Property<int>("MaxTagLength")
                        .HasColumnType("int")
                        .HasColumnName("max_tag_length");

                    b.Property<int>("SecondsTillUserIdle")
                        .HasColumnType("int")
                        .HasColumnName("seconds_till_user_idle");

                    b.Property<int>("WiredMaxFurnitureSelection")
                        .HasColumnType("int")
                        .HasColumnName("wired_max_furniture_selection");

                    b.ToTable("server_room_constants", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Furniture.FurnitureItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("asset_id");

                    b.Property<string>("AssetName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("asset_name");

                    b.Property<bool>("CanGift")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_gift");

                    b.Property<bool>("CanInventoryStack")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_inventory_stack");

                    b.Property<bool>("CanLay")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_lay");

                    b.Property<bool>("CanMarketplaceSell")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_marketplace_sell");

                    b.Property<bool>("CanRecycle")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_recycle");

                    b.Property<bool>("CanSit")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_sit");

                    b.Property<bool>("CanStack")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_stack");

                    b.Property<bool>("CanTrade")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_trade");

                    b.Property<bool>("CanWalk")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_walk");

                    b.Property<int>("InteractionModes")
                        .HasColumnType("int")
                        .HasColumnName("interaction_modes");

                    b.Property<string>("InteractionType")
                        .HasColumnType("longtext")
                        .HasColumnName("interaction_type");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<double>("StackHeight")
                        .HasColumnType("double")
                        .HasColumnName("stack_height");

                    b.Property<int>("TileSpanX")
                        .HasColumnType("int")
                        .HasColumnName("tile_span_x");

                    b.Property<int>("TileSpanY")
                        .HasColumnType("int")
                        .HasColumnName("tile_span_y");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_furniture_items");

                    b.ToTable("furniture_items", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedAt")
                        .HasColumnType("int")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.HasKey("Id")
                        .HasName("pk_groups");

                    b.HasIndex("RoomId")
                        .IsUnique()
                        .HasDatabaseName("ix_groups_room_id");

                    b.ToTable("groups", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.HandItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_hand_items");

                    b.ToTable("hand_items", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Navigator.NavigatorCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("code_name");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("TabId")
                        .HasColumnType("int")
                        .HasColumnName("tab_id");

                    b.HasKey("Id")
                        .HasName("pk_navigator_categories");

                    b.HasIndex("TabId")
                        .HasDatabaseName("ix_navigator_categories_tab_id");

                    b.ToTable("navigator_categories", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Navigator.NavigatorTab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_navigator_tabs");

                    b.ToTable("navigator_tabs", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.OauthClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("domain");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("secret");

                    b.HasKey("Id")
                        .HasName("pk_oauth_clients");

                    b.ToTable("oauth_clients", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_permissions");

                    b.ToTable("permissions", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("FurnitureItemId")
                        .HasColumnType("int")
                        .HasColumnName("furniture_item_id");

                    b.Property<string>("LimitedData")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("limited_data");

                    b.Property<string>("MetaData")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("meta_data");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.HasKey("Id")
                        .HasName("pk_player_furniture_items");

                    b.HasIndex("FurnitureItemId")
                        .HasDatabaseName("ix_player_furniture_items_furniture_item_id");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("ix_player_furniture_items_player_id");

                    b.ToTable("player_furniture_items", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItemLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChildId")
                        .HasColumnType("int")
                        .HasColumnName("child_id");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.HasKey("Id")
                        .HasName("pk_player_furniture_item_links");

                    b.HasIndex("ChildId")
                        .HasDatabaseName("ix_player_furniture_item_links_child_id");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_player_furniture_item_links_parent_id");

                    b.ToTable("player_furniture_item_links", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItemPlacementData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("Direction")
                        .HasColumnType("int")
                        .HasColumnName("direction");

                    b.Property<int>("PlayerFurnitureItemId")
                        .HasColumnType("int")
                        .HasColumnName("player_furniture_item_id");

                    b.Property<int>("PositionX")
                        .HasColumnType("int")
                        .HasColumnName("position_x");

                    b.Property<int>("PositionY")
                        .HasColumnType("int")
                        .HasColumnName("position_y");

                    b.Property<double>("PositionZ")
                        .HasColumnType("double")
                        .HasColumnName("position_z");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<string>("WallPosition")
                        .HasColumnType("longtext")
                        .HasColumnName("wall_position");

                    b.HasKey("Id")
                        .HasName("pk_player_furniture_item_placement_data");

                    b.HasIndex("PlayerFurnitureItemId")
                        .IsUnique()
                        .HasDatabaseName("ix_player_furniture_item_placement_data_player_furniture_item_id");

                    b.HasIndex("RoomId")
                        .HasDatabaseName("ix_player_furniture_item_placement_data_room_id");

                    b.ToTable("player_furniture_item_placement_data", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItemWiredData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Delay")
                        .HasColumnType("int")
                        .HasColumnName("delay");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<int>("PlayerFurnitureItemPlacementDataId")
                        .HasColumnType("int")
                        .HasColumnName("player_furniture_item_placement_data_id");

                    b.HasKey("Id")
                        .HasName("pk_player_furniture_item_wired_data");

                    b.HasIndex("PlayerFurnitureItemPlacementDataId")
                        .IsUnique()
                        .HasDatabaseName("ix_player_furniture_item_wired_data_player_furniture_item_place");

                    b.ToTable("player_furniture_item_wired_data", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_players");

                    b.ToTable("players", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerAvatarData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatBubbleId")
                        .HasColumnType("int")
                        .HasColumnName("chat_bubble_id");

                    b.Property<string>("FigureCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("figure_code");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("gender");

                    b.Property<string>("Motto")
                        .HasColumnType("longtext")
                        .HasColumnName("motto");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.HasKey("Id")
                        .HasName("pk_player_avatar_data");

                    b.HasIndex("PlayerId")
                        .IsUnique()
                        .HasDatabaseName("ix_player_avatar_data_player_id");

                    b.ToTable("player_avatar_data", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerBadge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BadgeId")
                        .HasColumnType("int")
                        .HasColumnName("badge_id");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<int>("Slot")
                        .HasColumnType("int")
                        .HasColumnName("slot");

                    b.HasKey("Id")
                        .HasName("pk_player_badges");

                    b.HasIndex("BadgeId")
                        .HasDatabaseName("ix_player_badges_badge_id");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("ix_player_badges_player_id");

                    b.ToTable("player_badges", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerBan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expires_at");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("reason");

                    b.HasKey("Id")
                        .HasName("pk_player_bans");

                    b.HasIndex("CreatorId")
                        .HasDatabaseName("ix_player_bans_creator_id");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("ix_player_bans_player_id");

                    b.ToTable("player_bans", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerBot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatBubbleId")
                        .HasColumnType("int")
                        .HasColumnName("chat_bubble_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("FigureCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("figure_code");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("gender");

                    b.Property<string>("Motto")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("motto");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_player_bots");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("ix_player_bots_player_id");

                    b.ToTable("player_bots", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AchievementScore")
                        .HasColumnType("int")
                        .HasColumnName("achievement_score");

                    b.Property<bool>("AllowFriendRequests")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("allow_friend_requests");

                    b.Property<int>("CreditBalance")
                        .HasColumnType("int")
                        .HasColumnName("credit_balance");

                    b.Property<int>("GotwPoints")
                        .HasColumnType("int")
                        .HasColumnName("gotw_points");

                    b.Property<int?>("HomeRoomId")
                        .HasColumnType("int")
                        .HasColumnName("home_room_id");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_online");

                    b.Property<DateTime?>("LastOnline")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_online");

                    b.Property<int>("PixelBalance")
                        .HasColumnType("int")
                        .HasColumnName("pixel_balance");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<int>("RespectPoints")
                        .HasColumnType("int")
                        .HasColumnName("respect_points");

                    b.Property<int>("RespectPointsPet")
                        .HasColumnType("int")
                        .HasColumnName("respect_points_pet");

                    b.Property<int>("SeasonalBalance")
                        .HasColumnType("int")
                        .HasColumnName("seasonal_balance");

                    b.HasKey("Id")
                        .HasName("pk_player_data");

                    b.HasIndex("PlayerId")
                        .IsUnique()
                        .HasDatabaseName("ix_player_data_player_id");

                    b.ToTable("player_data", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerFriendship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("OriginPlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("origin_player_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<long>("TargetPlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("target_player_id");

                    b.HasKey("Id")
                        .HasName("pk_player_friendships");

                    b.HasIndex("OriginPlayerId")
                        .HasDatabaseName("ix_player_friendships_origin_player_id");

                    b.HasIndex("TargetPlayerId")
                        .HasDatabaseName("ix_player_friendships_target_player_id");

                    b.ToTable("player_friendships", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerGameSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("BlockCameraFollow")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("block_camera_follow");

                    b.Property<bool>("BlockRoomInvites")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("block_room_invites");

                    b.Property<int>("FurnitureVolume")
                        .HasColumnType("int")
                        .HasColumnName("furniture_volume");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<bool>("PreferOldChat")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("prefer_old_chat");

                    b.Property<bool>("ShowNotifications")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("show_notifications");

                    b.Property<int>("SystemVolume")
                        .HasColumnType("int")
                        .HasColumnName("system_volume");

                    b.Property<int>("TraxVolume")
                        .HasColumnType("int")
                        .HasColumnName("trax_volume");

                    b.Property<int>("UiFlags")
                        .HasColumnType("int")
                        .HasColumnName("ui_flags");

                    b.HasKey("Id")
                        .HasName("pk_player_game_settings");

                    b.HasIndex("PlayerId")
                        .IsUnique()
                        .HasDatabaseName("ix_player_game_settings_player_id");

                    b.ToTable("player_game_settings", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerIgnore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<long>("TargetPlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("target_player_id");

                    b.HasKey("Id")
                        .HasName("pk_player_ignores");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("ix_player_ignores_player_id");

                    b.ToTable("player_ignores", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Message")
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<long>("OriginPlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("origin_player_id");

                    b.Property<long>("TargetPlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("target_player_id");

                    b.HasKey("Id")
                        .HasName("pk_player_messages");

                    b.HasIndex("OriginPlayerId")
                        .HasDatabaseName("ix_player_messages_origin_player_id");

                    b.HasIndex("TargetPlayerId")
                        .HasDatabaseName("ix_player_messages_target_player_id");

                    b.ToTable("player_messages", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerNavigatorSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("OpenSearches")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("open_searches");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<int>("WindowHeight")
                        .HasColumnType("int")
                        .HasColumnName("window_height");

                    b.Property<int>("WindowWidth")
                        .HasColumnType("int")
                        .HasColumnName("window_width");

                    b.Property<int>("WindowX")
                        .HasColumnType("int")
                        .HasColumnName("window_x");

                    b.Property<int>("WindowY")
                        .HasColumnType("int")
                        .HasColumnName("window_y");

                    b.HasKey("Id")
                        .HasName("pk_player_navigator_settings");

                    b.HasIndex("PlayerId")
                        .IsUnique()
                        .HasDatabaseName("ix_player_navigator_settings_player_id");

                    b.ToTable("player_navigator_settings", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerRelationship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("OriginPlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("origin_player_id");

                    b.Property<long>("TargetPlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("target_player_id");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("type_id");

                    b.HasKey("Id")
                        .HasName("pk_player_relationships");

                    b.HasIndex("OriginPlayerId")
                        .HasDatabaseName("ix_player_relationships_origin_player_id");

                    b.HasIndex("TargetPlayerId")
                        .HasDatabaseName("ix_player_relationships_target_player_id");

                    b.ToTable("player_relationships", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerRelationshipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_player_relationship_types");

                    b.ToTable("player_relationship_types", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerRespect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("OriginPlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("origin_player_id");

                    b.Property<long>("TargetPlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("target_player_id");

                    b.HasKey("Id")
                        .HasName("pk_player_respects");

                    b.HasIndex("OriginPlayerId")
                        .HasDatabaseName("ix_player_respects_origin_player_id");

                    b.HasIndex("TargetPlayerId")
                        .HasDatabaseName("ix_player_respects_target_player_id");

                    b.ToTable("player_respects", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerRoomBan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expires_at");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.HasKey("Id")
                        .HasName("pk_player_room_bans");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("ix_player_room_bans_player_id");

                    b.HasIndex("RoomId")
                        .HasDatabaseName("ix_player_room_bans_room_id");

                    b.ToTable("player_room_bans", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerRoomLike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.HasKey("Id")
                        .HasName("pk_player_room_likes");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("ix_player_room_likes_player_id");

                    b.HasIndex("RoomId")
                        .HasDatabaseName("ix_player_room_likes_room_id");

                    b.ToTable("player_room_likes", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerRoomVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.HasKey("Id")
                        .HasName("pk_player_room_visits");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("ix_player_room_visits_player_id");

                    b.ToTable("player_room_visits", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerSavedSearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Filter")
                        .HasColumnType("longtext")
                        .HasColumnName("filter");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<string>("Search")
                        .HasColumnType("longtext")
                        .HasColumnName("search");

                    b.HasKey("Id")
                        .HasName("pk_player_saved_searches");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("ix_player_saved_searches_player_id");

                    b.ToTable("player_saved_searches", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerSsoToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expires_at");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<string>("Token")
                        .HasColumnType("longtext")
                        .HasColumnName("token");

                    b.Property<DateTime?>("UsedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("used_at");

                    b.HasKey("Id")
                        .HasName("pk_player_sso_tokens");

                    b.ToTable("player_sso_tokens", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expires_at");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int")
                        .HasColumnName("subscription_id");

                    b.HasKey("Id")
                        .HasName("pk_player_subscriptions");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("ix_player_subscriptions_player_id");

                    b.HasIndex("SubscriptionId")
                        .HasDatabaseName("ix_player_subscriptions_subscription_id");

                    b.ToTable("player_subscriptions", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<long?>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.HasKey("Id")
                        .HasName("pk_player_tags");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("ix_player_tags_player_id");

                    b.ToTable("player_tags", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerWardrobeItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FigureCode")
                        .HasColumnType("longtext")
                        .HasColumnName("figure_code");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<long?>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<int>("SlotId")
                        .HasColumnType("int")
                        .HasColumnName("slot_id");

                    b.HasKey("Id")
                        .HasName("pk_player_wardrobe_items");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("ix_player_wardrobe_items_player_id");

                    b.ToTable("player_wardrobe_items", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_roles");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.Chat.RoomChatMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatBubbleId")
                        .HasColumnType("int")
                        .HasColumnName("chat_bubble_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("EmotionId")
                        .HasColumnType("int")
                        .HasColumnName("emotion_id");

                    b.Property<string>("Message")
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("type_id");

                    b.HasKey("Id")
                        .HasName("pk_room_chat_messages");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("ix_room_chat_messages_player_id");

                    b.HasIndex("RoomId")
                        .HasDatabaseName("ix_room_chat_messages_room_id");

                    b.ToTable("room_chat_messages", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.Rights.RoomPlayerRight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.HasKey("Id")
                        .HasName("pk_room_player_rights");

                    b.HasIndex("RoomId")
                        .HasDatabaseName("ix_room_player_rights_room_id");

                    b.ToTable("room_player_rights", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<bool>("IsMuted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_muted");

                    b.Property<int>("LayoutId")
                        .HasColumnType("int")
                        .HasColumnName("layout_id");

                    b.Property<int>("MaxUsersAllowed")
                        .HasColumnType("int")
                        .HasColumnName("max_users_allowed");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint")
                        .HasColumnName("owner_id");

                    b.HasKey("Id")
                        .HasName("pk_rooms");

                    b.HasIndex("LayoutId")
                        .HasDatabaseName("ix_rooms_layout_id");

                    b.HasIndex("OwnerId")
                        .HasDatabaseName("ix_rooms_owner_id");

                    b.ToTable("rooms", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.RoomCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caption")
                        .HasColumnType("longtext")
                        .HasColumnName("caption");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_visible");

                    b.HasKey("Id")
                        .HasName("pk_room_categories");

                    b.ToTable("room_categories", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.RoomChatSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatDistance")
                        .HasColumnType("int")
                        .HasColumnName("chat_distance");

                    b.Property<int>("ChatProtection")
                        .HasColumnType("int")
                        .HasColumnName("chat_protection");

                    b.Property<int>("ChatSpeed")
                        .HasColumnType("int")
                        .HasColumnName("chat_speed");

                    b.Property<int>("ChatType")
                        .HasColumnType("int")
                        .HasColumnName("chat_type");

                    b.Property<int>("ChatWeight")
                        .HasColumnType("int")
                        .HasColumnName("chat_weight");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.HasKey("Id")
                        .HasName("pk_room_chat_settings");

                    b.HasIndex("RoomId")
                        .IsUnique()
                        .HasDatabaseName("ix_room_chat_settings_room_id");

                    b.ToTable("room_chat_settings", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.RoomDimmerPreset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("BackgroundOnly")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("background_only");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("color");

                    b.Property<int>("Intensity")
                        .HasColumnType("int")
                        .HasColumnName("intensity");

                    b.Property<int>("PresetId")
                        .HasColumnType("int")
                        .HasColumnName("preset_id");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint")
                        .HasColumnName("room_id");

                    b.HasKey("Id")
                        .HasName("pk_room_dimmer_presets");

                    b.ToTable("room_dimmer_presets", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.RoomDimmerSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("enabled");

                    b.Property<int>("PresetId")
                        .HasColumnType("int")
                        .HasColumnName("preset_id");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.HasKey("Id")
                        .HasName("pk_room_dimmer_settings");

                    b.HasIndex("RoomId")
                        .IsUnique()
                        .HasDatabaseName("ix_room_dimmer_settings_room_id");

                    b.ToTable("room_dimmer_settings", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.RoomLayout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DoorDirection")
                        .HasColumnType("int")
                        .HasColumnName("door_direction");

                    b.Property<int>("DoorX")
                        .HasColumnType("int")
                        .HasColumnName("door_x");

                    b.Property<int>("DoorY")
                        .HasColumnType("int")
                        .HasColumnName("door_y");

                    b.Property<string>("ExtraData")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_data");

                    b.Property<string>("Heightmap")
                        .HasColumnType("longtext")
                        .HasColumnName("heightmap");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<bool>("RequiresClubMembership")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("requires_club_membership");

                    b.HasKey("Id")
                        .HasName("pk_room_layouts");

                    b.ToTable("room_layouts", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.RoomPaintSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FloorPaint")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("floor_paint");

                    b.Property<string>("LandscapePaint")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("landscape_paint");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<string>("WallPaint")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("wall_paint");

                    b.HasKey("Id")
                        .HasName("pk_room_paint_settings");

                    b.HasIndex("RoomId")
                        .IsUnique()
                        .HasDatabaseName("ix_room_paint_settings_room_id");

                    b.ToTable("room_paint_settings", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.RoomSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessType")
                        .HasColumnType("int")
                        .HasColumnName("access_type");

                    b.Property<bool>("AllowPets")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("allow_pets");

                    b.Property<bool>("CanPetsEat")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_pets_eat");

                    b.Property<bool>("CanUsersOverlap")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_users_overlap");

                    b.Property<int>("FloorThickness")
                        .HasColumnType("int")
                        .HasColumnName("floor_thickness");

                    b.Property<bool>("HideWalls")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("hide_walls");

                    b.Property<string>("Password")
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<int>("TradeOption")
                        .HasColumnType("int")
                        .HasColumnName("trade_option");

                    b.Property<bool>("WalkDiagonal")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("walk_diagonal");

                    b.Property<int>("WallThickness")
                        .HasColumnType("int")
                        .HasColumnName("wall_thickness");

                    b.Property<int>("WhoCanBan")
                        .HasColumnType("int")
                        .HasColumnName("who_can_ban");

                    b.Property<int>("WhoCanKick")
                        .HasColumnType("int")
                        .HasColumnName("who_can_kick");

                    b.Property<int>("WhoCanMute")
                        .HasColumnType("int")
                        .HasColumnName("who_can_mute");

                    b.HasKey("Id")
                        .HasName("pk_room_settings");

                    b.HasIndex("RoomId")
                        .IsUnique()
                        .HasDatabaseName("ix_room_settings_room_id");

                    b.ToTable("room_settings", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.RoomTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.HasKey("Id")
                        .HasName("pk_room_tags");

                    b.HasIndex("RoomId")
                        .HasDatabaseName("ix_room_tags_room_id");

                    b.ToTable("room_tags", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Server.ServerPeriodicCurrencyReward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int>("IntervalSeconds")
                        .HasColumnType("int")
                        .HasColumnName("interval_seconds");

                    b.Property<bool>("SkipHotelView")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("skip_hotel_view");

                    b.Property<bool>("SkipIdle")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("skip_idle");

                    b.Property<string>("Type")
                        .HasColumnType("longtext")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_server_periodic_currency_rewards");

                    b.ToTable("server_periodic_currency_rewards", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Server.ServerPeriodicCurrencyRewardLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.Property<string>("Type")
                        .HasColumnType("longtext")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_server_periodic_currency_reward_logs");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("ix_server_periodic_currency_reward_logs_player_id");

                    b.ToTable("server_periodic_currency_reward_logs", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Server.ServerSettings", b =>
                {
                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<bool>("FairCurrencyRewards")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("fair_currency_rewards");

                    b.Property<string>("PlayerWelcomeMessage")
                        .HasColumnType("longtext")
                        .HasColumnName("player_welcome_message");

                    b.ToTable("server_settings", (string)null);
                });

            modelBuilder.Entity("Sadie.Db.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_subscriptions");

                    b.ToTable("subscriptions", (string)null);
                });

            modelBuilder.Entity("group_player", b =>
                {
                    b.Property<int>("group_id")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<long>("player_id")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.HasKey("group_id", "player_id")
                        .HasName("pk_group_player");

                    b.HasIndex("player_id")
                        .HasDatabaseName("ix_group_player_player_id");

                    b.ToTable("group_player", (string)null);
                });

            modelBuilder.Entity("player_furniture_item_wired_data_items", b =>
                {
                    b.Property<int>("player_furniture_item_placement_data_id")
                        .HasColumnType("int")
                        .HasColumnName("player_furniture_item_placement_data_id");

                    b.Property<int>("player_furniture_item_wired_data_id")
                        .HasColumnType("int")
                        .HasColumnName("player_furniture_item_wired_data_id");

                    b.HasKey("player_furniture_item_placement_data_id", "player_furniture_item_wired_data_id")
                        .HasName("pk_player_furniture_item_wired_data_items");

                    b.HasIndex("player_furniture_item_wired_data_id")
                        .HasDatabaseName("ix_player_furniture_item_wired_data_items_player_furniture_item");

                    b.ToTable("player_furniture_item_wired_data_items", (string)null);
                });

            modelBuilder.Entity("player_role", b =>
                {
                    b.Property<int>("role_id")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<long>("player_id")
                        .HasColumnType("bigint")
                        .HasColumnName("player_id");

                    b.HasKey("role_id", "player_id")
                        .HasName("pk_player_role");

                    b.HasIndex("player_id")
                        .HasDatabaseName("ix_player_role_player_id");

                    b.ToTable("player_role", (string)null);
                });

            modelBuilder.Entity("roles_permissions", b =>
                {
                    b.Property<int>("permission_id")
                        .HasColumnType("int")
                        .HasColumnName("permission_id");

                    b.Property<int>("role_id")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("permission_id", "role_id")
                        .HasName("pk_roles_permissions");

                    b.HasIndex("role_id")
                        .HasDatabaseName("ix_roles_permissions_role_id");

                    b.ToTable("roles_permissions", (string)null);
                });

            modelBuilder.Entity("CatalogItemFurnitureItem", b =>
                {
                    b.HasOne("Sadie.Db.Models.Catalog.Items.CatalogItem", null)
                        .WithMany()
                        .HasForeignKey("CatalogItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_catalog_item_furniture_item_catalog_items_catalog_items_id");

                    b.HasOne("Sadie.Db.Models.Furniture.FurnitureItem", null)
                        .WithMany()
                        .HasForeignKey("FurnitureItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_catalog_item_furniture_item_furniture_items_furniture_items_");
                });

            modelBuilder.Entity("FurnitureItemHandItem", b =>
                {
                    b.HasOne("Sadie.Db.Models.Furniture.FurnitureItem", null)
                        .WithMany()
                        .HasForeignKey("FurnitureItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_furniture_item_hand_item_furniture_items_furniture_items_id");

                    b.HasOne("Sadie.Db.Models.HandItem", null)
                        .WithMany()
                        .HasForeignKey("HandItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_furniture_item_hand_item_hand_item_hand_items_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.BannedIpAddress", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_banned_ip_addresses_players_creator_id");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Sadie.Db.Models.Catalog.FrontPage.CatalogFrontPageItem", b =>
                {
                    b.HasOne("Sadie.Db.Models.Catalog.Pages.CatalogPage", "CatalogPage")
                        .WithMany()
                        .HasForeignKey("CatalogPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_catalog_front_page_items_catalog_pages_catalog_page_id");

                    b.Navigation("CatalogPage");
                });

            modelBuilder.Entity("Sadie.Db.Models.Catalog.Items.CatalogItem", b =>
                {
                    b.HasOne("Sadie.Db.Models.Catalog.Pages.CatalogPage", null)
                        .WithMany("Items")
                        .HasForeignKey("CatalogPageId")
                        .HasConstraintName("fk_catalog_items_catalog_pages_catalog_page_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.Catalog.Pages.CatalogPage", b =>
                {
                    b.HasOne("Sadie.Db.Models.Catalog.Pages.CatalogPage", null)
                        .WithMany("Pages")
                        .HasForeignKey("CatalogPageId")
                        .HasConstraintName("fk_catalog_pages_catalog_pages_catalog_page_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.Group", b =>
                {
                    b.HasOne("Sadie.Db.Models.Rooms.Room", null)
                        .WithOne("Group")
                        .HasForeignKey("Sadie.Db.Models.Group", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_groups_rooms_room_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.Navigator.NavigatorCategory", b =>
                {
                    b.HasOne("Sadie.Db.Models.Navigator.NavigatorTab", "Tab")
                        .WithMany("Categories")
                        .HasForeignKey("TabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_navigator_categories_navigator_tabs_tab_id");

                    b.Navigation("Tab");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItem", b =>
                {
                    b.HasOne("Sadie.Db.Models.Furniture.FurnitureItem", "FurnitureItem")
                        .WithMany()
                        .HasForeignKey("FurnitureItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_furniture_items_furniture_items_furniture_item_id");

                    b.HasOne("Sadie.Db.Models.Players.Player", "Player")
                        .WithMany("FurnitureItems")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_furniture_items_players_player_id");

                    b.Navigation("FurnitureItem");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItemLink", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItem", "Child")
                        .WithMany()
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_furniture_item_links_player_furniture_items_child_id");

                    b.HasOne("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItem", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_furniture_item_links_player_furniture_items_parent_id");

                    b.Navigation("Child");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItemPlacementData", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItem", "PlayerFurnitureItem")
                        .WithOne("PlacementData")
                        .HasForeignKey("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItemPlacementData", "PlayerFurnitureItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_furniture_item_placement_data_player_furniture_items_");

                    b.HasOne("Sadie.Db.Models.Rooms.Room", "Room")
                        .WithMany("FurnitureItems")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_furniture_item_placement_data_rooms_room_id");

                    b.Navigation("PlayerFurnitureItem");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItemWiredData", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItemPlacementData", "PlacementData")
                        .WithOne("WiredData")
                        .HasForeignKey("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItemWiredData", "PlayerFurnitureItemPlacementDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_furniture_item_wired_data_player_furniture_item_place");

                    b.Navigation("PlacementData");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerAvatarData", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", "Player")
                        .WithOne("AvatarData")
                        .HasForeignKey("Sadie.Db.Models.Players.PlayerAvatarData", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_avatar_data_players_player_id");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerBadge", b =>
                {
                    b.HasOne("Sadie.Db.Models.Badge", "Badge")
                        .WithMany()
                        .HasForeignKey("BadgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_badges_badges_badge_id");

                    b.HasOne("Sadie.Db.Models.Players.Player", null)
                        .WithMany("Badges")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_badges_players_player_id");

                    b.Navigation("Badge");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerBan", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_bans_players_creator_id");

                    b.HasOne("Sadie.Db.Models.Players.Player", "Player")
                        .WithMany("Bans")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_bans_players_player_id");

                    b.Navigation("Creator");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerBot", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", null)
                        .WithMany("Bots")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_bots_players_player_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerData", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", "Player")
                        .WithOne("Data")
                        .HasForeignKey("Sadie.Db.Models.Players.PlayerData", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_data_players_player_id");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerFriendship", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", "OriginPlayer")
                        .WithMany("OutgoingFriendships")
                        .HasForeignKey("OriginPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_friendships_players_origin_player_id");

                    b.HasOne("Sadie.Db.Models.Players.Player", "TargetPlayer")
                        .WithMany("IncomingFriendships")
                        .HasForeignKey("TargetPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_friendships_players_target_player_id");

                    b.Navigation("OriginPlayer");

                    b.Navigation("TargetPlayer");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerGameSettings", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", "Player")
                        .WithOne("GameSettings")
                        .HasForeignKey("Sadie.Db.Models.Players.PlayerGameSettings", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_game_settings_players_player_id");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerIgnore", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", null)
                        .WithMany("Ignores")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_ignores_players_player_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerMessage", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", "OriginPlayer")
                        .WithMany()
                        .HasForeignKey("OriginPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_messages_players_origin_player_id");

                    b.HasOne("Sadie.Db.Models.Players.Player", "TargetPlayer")
                        .WithMany()
                        .HasForeignKey("TargetPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_messages_players_target_player_id");

                    b.Navigation("OriginPlayer");

                    b.Navigation("TargetPlayer");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerNavigatorSettings", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", "Player")
                        .WithOne("NavigatorSettings")
                        .HasForeignKey("Sadie.Db.Models.Players.PlayerNavigatorSettings", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_navigator_settings_players_player_id");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerRelationship", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", "OriginPlayer")
                        .WithMany("Relationships")
                        .HasForeignKey("OriginPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_relationships_players_origin_player_id");

                    b.HasOne("Sadie.Db.Models.Players.Player", "TargetPlayer")
                        .WithMany()
                        .HasForeignKey("TargetPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_relationships_players_target_player_id");

                    b.Navigation("OriginPlayer");

                    b.Navigation("TargetPlayer");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerRespect", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", "OriginPlayer")
                        .WithMany()
                        .HasForeignKey("OriginPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_respects_players_origin_player_id");

                    b.HasOne("Sadie.Db.Models.Players.Player", "TargetPlayer")
                        .WithMany("Respects")
                        .HasForeignKey("TargetPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_respects_players_target_player_id");

                    b.Navigation("OriginPlayer");

                    b.Navigation("TargetPlayer");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerRoomBan", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_room_bans_players_player_id");

                    b.HasOne("Sadie.Db.Models.Rooms.Room", null)
                        .WithMany("PlayerBans")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_room_bans_rooms_room_id");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerRoomLike", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", null)
                        .WithMany("RoomLikes")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_room_likes_players_player_id");

                    b.HasOne("Sadie.Db.Models.Rooms.Room", null)
                        .WithMany("PlayerLikes")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_room_likes_rooms_room_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerRoomVisit", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", null)
                        .WithMany("RoomVisits")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_room_visits_players_player_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerSavedSearch", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", null)
                        .WithMany("SavedSearches")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_saved_searches_players_player_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerSubscription", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", "Player")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_subscriptions_players_player_id");

                    b.HasOne("Sadie.Db.Models.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_subscriptions_subscriptions_subscription_id");

                    b.Navigation("Player");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerTag", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", null)
                        .WithMany("Tags")
                        .HasForeignKey("PlayerId")
                        .HasConstraintName("fk_player_tags_players_player_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.PlayerWardrobeItem", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", null)
                        .WithMany("WardrobeItems")
                        .HasForeignKey("PlayerId")
                        .HasConstraintName("fk_player_wardrobe_items_players_player_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.Chat.RoomChatMessage", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_room_chat_messages_players_player_id");

                    b.HasOne("Sadie.Db.Models.Rooms.Room", null)
                        .WithMany("ChatMessages")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_room_chat_messages_rooms_room_id");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.Rights.RoomPlayerRight", b =>
                {
                    b.HasOne("Sadie.Db.Models.Rooms.Room", null)
                        .WithMany("PlayerRights")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_room_player_rights_rooms_room_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.Room", b =>
                {
                    b.HasOne("Sadie.Db.Models.Rooms.RoomLayout", "Layout")
                        .WithMany()
                        .HasForeignKey("LayoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_rooms_room_layouts_layout_id");

                    b.HasOne("Sadie.Db.Models.Players.Player", "Owner")
                        .WithMany("Rooms")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_rooms_players_owner_id");

                    b.Navigation("Layout");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.RoomChatSettings", b =>
                {
                    b.HasOne("Sadie.Db.Models.Rooms.Room", null)
                        .WithOne("ChatSettings")
                        .HasForeignKey("Sadie.Db.Models.Rooms.RoomChatSettings", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_room_chat_settings_rooms_room_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.RoomDimmerSettings", b =>
                {
                    b.HasOne("Sadie.Db.Models.Rooms.Room", null)
                        .WithOne("DimmerSettings")
                        .HasForeignKey("Sadie.Db.Models.Rooms.RoomDimmerSettings", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_room_dimmer_settings_rooms_room_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.RoomPaintSettings", b =>
                {
                    b.HasOne("Sadie.Db.Models.Rooms.Room", "Room")
                        .WithOne("PaintSettings")
                        .HasForeignKey("Sadie.Db.Models.Rooms.RoomPaintSettings", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_room_paint_settings_rooms_room_id");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.RoomSettings", b =>
                {
                    b.HasOne("Sadie.Db.Models.Rooms.Room", null)
                        .WithOne("Settings")
                        .HasForeignKey("Sadie.Db.Models.Rooms.RoomSettings", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_room_settings_rooms_room_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.RoomTag", b =>
                {
                    b.HasOne("Sadie.Db.Models.Rooms.Room", null)
                        .WithMany("Tags")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("fk_room_tags_rooms_room_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.Server.ServerPeriodicCurrencyRewardLog", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", "Player")
                        .WithMany("RewardLogs")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_server_periodic_currency_reward_logs_players_player_id");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("group_player", b =>
                {
                    b.HasOne("Sadie.Db.Models.Group", null)
                        .WithMany()
                        .HasForeignKey("group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_group_player_groups_group_id");

                    b.HasOne("Sadie.Db.Models.Players.Player", null)
                        .WithMany()
                        .HasForeignKey("player_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_group_player_players_player_id");
                });

            modelBuilder.Entity("player_furniture_item_wired_data_items", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItemPlacementData", null)
                        .WithMany()
                        .HasForeignKey("player_furniture_item_placement_data_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_furniture_item_wired_data_items_player_furniture_item");

                    b.HasOne("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItemWiredData", null)
                        .WithMany()
                        .HasForeignKey("player_furniture_item_wired_data_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_furniture_item_wired_data_items_player_furniture_item1");
                });

            modelBuilder.Entity("player_role", b =>
                {
                    b.HasOne("Sadie.Db.Models.Players.Player", null)
                        .WithMany()
                        .HasForeignKey("player_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_role_players_player_id");

                    b.HasOne("Sadie.Db.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_player_role_roles_role_id");
                });

            modelBuilder.Entity("roles_permissions", b =>
                {
                    b.HasOne("Sadie.Db.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("permission_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_roles_permissions_permissions_permission_id");

                    b.HasOne("Sadie.Db.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_roles_permissions_roles_role_id");
                });

            modelBuilder.Entity("Sadie.Db.Models.Catalog.Pages.CatalogPage", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Pages");
                });

            modelBuilder.Entity("Sadie.Db.Models.Navigator.NavigatorTab", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItem", b =>
                {
                    b.Navigation("PlacementData");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.Furniture.PlayerFurnitureItemPlacementData", b =>
                {
                    b.Navigation("WiredData");
                });

            modelBuilder.Entity("Sadie.Db.Models.Players.Player", b =>
                {
                    b.Navigation("AvatarData");

                    b.Navigation("Badges");

                    b.Navigation("Bans");

                    b.Navigation("Bots");

                    b.Navigation("Data");

                    b.Navigation("FurnitureItems");

                    b.Navigation("GameSettings");

                    b.Navigation("Ignores");

                    b.Navigation("IncomingFriendships");

                    b.Navigation("NavigatorSettings");

                    b.Navigation("OutgoingFriendships");

                    b.Navigation("Relationships");

                    b.Navigation("Respects");

                    b.Navigation("RewardLogs");

                    b.Navigation("RoomLikes");

                    b.Navigation("RoomVisits");

                    b.Navigation("Rooms");

                    b.Navigation("SavedSearches");

                    b.Navigation("Subscriptions");

                    b.Navigation("Tags");

                    b.Navigation("WardrobeItems");
                });

            modelBuilder.Entity("Sadie.Db.Models.Rooms.Room", b =>
                {
                    b.Navigation("ChatMessages");

                    b.Navigation("ChatSettings");

                    b.Navigation("DimmerSettings");

                    b.Navigation("FurnitureItems");

                    b.Navigation("Group");

                    b.Navigation("PaintSettings")
                        .IsRequired();

                    b.Navigation("PlayerBans");

                    b.Navigation("PlayerLikes");

                    b.Navigation("PlayerRights");

                    b.Navigation("Settings")
                        .IsRequired();

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
